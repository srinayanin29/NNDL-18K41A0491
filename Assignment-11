{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of assignment-11","provenance":[{"file_id":"1I00qmeWrf1_XWnFawKcn_p0v4GQiElCJ","timestamp":1616517081997}],"authorship_tag":"ABX9TyPJ2ZSushzqktFESikk+Jhb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"oi41tpxG52My"},"source":["Nesterov Accelerated Gradient (NAG) Optimizer.\n","\n","Develop a simple linear regression model using Nesterov Accelerated Gradiant (NAG) optimizer. Write a python code to build simple linear regression model using Nesterov Accelerated Gradiant (NAG) optimizer."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xQS6lzTX53gP","executionInfo":{"status":"ok","timestamp":1616516807193,"user_tz":-330,"elapsed":1038,"user":{"displayName":"srinayani 29","photoUrl":"","userId":"08837727420127592366"}},"outputId":"f81a26d1-4853-40e7-d26c-9b92829c1415"},"source":["x=[0.2,0.4,0.6,0.8]\n","y=[3.4,3.8,4.2,4.6]\n","m=1\n","c=-1\n","epochs=100 # epochs\n","l=0.1      # learning rate\n","ns=len(x)\n","gama=0.9\n","vm=0\n","vc=0\n","for i in range(epochs):\n","  for j in range(len(x)):\n","    gm=((-1)*(y[j]-(m+(gama*vm))*x[j]-(c+(gama*vc)))*(x[j]))\n","    gc=((-1)*(y[j]-(m+(gama*vm))*x[j]-(c+(gama*vc))))\n","    vm=(gama*vm)-(l*gm)\n","    vc=(gama*vc)-(l*gc)\n","    m=m+vm\n","    c=c+vc\n","print(\"The local minimum occurs at m = %.2f\"%(m),\", c = %.2f\"%(c))"],"execution_count":1,"outputs":[{"output_type":"stream","text":["The local minimum occurs at m = 2.00 , c = 3.00\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"XsWKHrK36Xgt","executionInfo":{"status":"ok","timestamp":1616516844543,"user_tz":-330,"elapsed":1541,"user":{"displayName":"srinayani 29","photoUrl":"","userId":"08837727420127592366"}},"outputId":"8d0cc34b-8929-4cb2-d9fe-58534163dfb5"},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","x1=np.linspace(-5,5,100)\n","y1=m*x1+c\n","m=round(m,2)\n","c=round(c,2)\n","plt.plot(x1,y1,'-r', label='y='+str(m)+'x+'+str(c))\n","plt.title('Graph of '+'y='+str(m)+'x+'+str(c))\n","plt.xlabel('x', color='#1C2833')\n","plt.ylabel('y', color='#1C2833')\n","plt.legend(loc='upper left')\n","plt.grid()\n","plt.show()"],"execution_count":2,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l0KU12vf6Z7G","executionInfo":{"status":"ok","timestamp":1616516866635,"user_tz":-330,"elapsed":1027,"user":{"displayName":"srinayani 29","photoUrl":"","userId":"08837727420127592366"}},"outputId":"03ed7211-c29f-4aa2-f9db-ff96cc78dd6d"},"source":["yp=[]\n","for i in range(len(x)):\n","  p=(m*x[i])+c\n","  yp.append(p)\n","print(\"Predicted values (yp) : \",yp)\n","sum=0\n","for i in range(len(x)):\n","  sum+=(y[i]-yp[i])**2\n","  mse=sum/len(x)\n","print(\"Mean Square Error (MSE) : \",mse)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Predicted values (yp) :  [3.4, 3.8, 4.2, 4.6]\n","Mean Square Error (MSE) :  0.0\n"],"name":"stdout"}]}]}